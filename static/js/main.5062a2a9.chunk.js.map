{"version":3,"sources":["api/upbit.ts","utils/quant/correlation.ts","utils/quant/movingAverage.ts","context/CryptoContext.tsx","utils/clamp.ts","utils/math/Vector4.ts","utils/math/Vector3.ts","utils/math/Vector2.ts","utils/cartesian.ts","utils/math/Matrix2x2.ts","utils/math/Matrix3x3.ts","utils/rotator2d.ts","components/Galaxy/Continent.ts","components/Galaxy/Continents/Examples.ts","components/Galaxy/Planet.ts","components/Galaxy/Sun.ts","components/Galaxy/Canvas.ts","components/Galaxy/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PROXY_API_URL","getDayCandles","market","count","axios","get","res","console","log","data","getTicker","calcCorrelationCoefficient","candlesA","candlesB","dateAscendingCandlesA","Date","candle_date_time_utc","getTime","length","reverse","dateAscendingCandlesB","prevClosingPricesA","map","el","prev_closing_price","prevClosingPricesB","prevClosingPricesMeanA","reduce","a","b","prevClosingPricesMeanB","prevClosingPricesMeanDiffSquaredSumA","price","Math","pow","prevClosingPricesMeanDiffSquaredSumB","covariance","i","sqrt","calcIncreaseRatioOfMA","candles","interval","Error","MAArray","returnMAArray","dateAscendingCandle","maArray","totalCount","prevClosingPrices","average","slice","push","CryptoContext","createContext","CryptoContextProvider","children","useState","Map","cryptoData","setCryptoData","retrieveOtherCryptoData","useCallback","dayCount","btcDayCandles","otherCryptoDayCandles","volume","candle_acc_trade_price","increaseRatio","coefficient","prev","newMap","set","useEffect","then","btcCandles","Provider","value","changeRelativeValueToRealValue","inputMin","inputMax","returnMin","returnMax","relativeValue","Vector4","x","y","z","w","this","v","dot","n","Vector2","Vector3","scalarBy","One","Zero","UnitX","UnitY","UnitZ","UnitW","isPoint","floor","convertCartesianToScreenPoint","canvas","cartesianPoint","add","width","height","Matrix2x2","InCol0","InCol1","Cols","m","subtract","negative","transposedMatrix","transpose","Matrix3x3","InCol2","toVector2","Rotator2D","InDegree","degree","getClampedValue","clamp","PI","newDegree","cos","toRadian","sin","toAffine","undefined","angle","Continent","points","scale","origin","color","ctx","getContext","save","beginPath","moveTo","point","lineTo","fillStyle","r","g","fill","closePath","restore","ContinentSamples","Planet","distanceFromSun","speed","radius","name","rotator","position","spaceShips","continents","continentOrigins","random","positionAffineVector","rotateAffineMatrix","getRotateAffineMatrix","selectedContinents","sort","continent","multiplyVector","leftOriginCount","continentOrigin","shift","arc","clip","draw","drawPosition","textAlign","textBaseline","fillText","drawContinents","Sun","brightness","clampMaxValue","adjustedRadius","clampBrightnessRadius","drawBrightnessInner","drawBrightnessOuter","drawSun","GalaxyCanvas","element","fps","sun","planets","requestAnimationFrameId","MIN_PLANET_SIZE","MAX_PLANET_SIZE","updateFrame","render","setTimeout","requestAnimationFrame","bind","clear","drawScene","initialize","correlationCoefficient","distance","changeRelativeValueToRealValueInversed","size","planet","devicePixelRatio","style","setWidth","setHeight","fillRect","drawBackground","drawGalaxyComponents","clearRect","Galaxy","canvasRef","useRef","divRef","galaxyCanvasRef","useContext","current","galaxyCanvas","destroy","crypto","setBrightness","includes","addPlanet","onResize","rect","getBoundingClientRect","setSize","window","addEventListener","removeEventListener","ref","App","display","flexDirection","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.5062a2a9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  ICandleDayReturnProps,\n  ICandleReturnProps,\n  ITickerProps,\n} from \"node-upbit/lib/@types/quotation\";\n\n// const PROXY_API_URL = \"https://upbit-next-proxy.vercel.app/api/\";\n\nconst isDevMode = process.env.NODE_ENV === \"development\";\nconst PROXY_API_URL = isDevMode\n  ? \"/api/\"\n  : \"https://upbit-next-proxy.vercel.app/api/\";\n\nexport const getDayCandles = async (market: string, count: number) => {\n  const res = await axios.get(\n    PROXY_API_URL + \"days\" + `?market=${market}&count=${count}`\n  );\n  console.log(res);\n  return res.data.data as ICandleDayReturnProps[];\n};\n\nexport const getTicker = async (market: string) => {\n  const res = await axios.get(PROXY_API_URL + \"ticker\" + `?market=${market}`);\n  return res.data.data as ITickerProps;\n};\n\nexport const getMinuteCandles = async (market: string) => {\n  const res = await axios.get(PROXY_API_URL + \"minutes\" + `?market=${market}`);\n  return res.data.data as ICandleReturnProps[];\n};\n","import { ICandleDayReturnProps } from \"node-upbit/lib/@types/quotation\";\n\n/**\n * Pearson correlation coefficient (PCC)\n * @param candlesA\n * @param candlesB\n * @returns coefficient between -1 and 1\n */\nexport const calcCorrelationCoefficient = (\n  candlesA: Array<ICandleDayReturnProps>,\n  candlesB: Array<ICandleDayReturnProps>\n) => {\n  const dateAscendingCandlesA =\n    new Date(candlesA[0].candle_date_time_utc).getTime() -\n      new Date(candlesA[candlesA.length - 1].candle_date_time_utc).getTime() >\n    0\n      ? [...candlesA].reverse()\n      : candlesA;\n\n  const dateAscendingCandlesB =\n    new Date(candlesB[0].candle_date_time_utc).getTime() -\n      new Date(candlesB[candlesB.length - 1].candle_date_time_utc).getTime() >\n    0\n      ? [...candlesA].reverse()\n      : candlesA;\n\n  const prevClosingPricesA = dateAscendingCandlesA.map(\n    (el) => el.prev_closing_price\n  );\n\n  const prevClosingPricesB = dateAscendingCandlesB.map(\n    (el) => el.prev_closing_price\n  );\n\n  const prevClosingPricesMeanA =\n    prevClosingPricesA.reduce((a, b) => a + b, 0) / prevClosingPricesA.length;\n\n  const prevClosingPricesMeanB =\n    prevClosingPricesB.reduce((a, b) => a + b, 0) / prevClosingPricesB.length;\n\n  const prevClosingPricesMeanDiffSquaredSumA = prevClosingPricesA\n    .map((price) => Math.pow(price - prevClosingPricesMeanA, 2))\n    .reduce((a, b) => a + b, 0);\n\n  const prevClosingPricesMeanDiffSquaredSumB = prevClosingPricesB\n    .map((price) => Math.pow(price - prevClosingPricesMeanB, 2))\n    .reduce((a, b) => a + b, 0);\n\n  let covariance = 0;\n\n  for (let i = 0; i < candlesA.length; i++) {\n    covariance +=\n      (candlesA[i].prev_closing_price - prevClosingPricesMeanA) *\n      (candlesB[i].prev_closing_price - prevClosingPricesMeanB);\n  }\n\n  return (\n    covariance /\n    (Math.sqrt(prevClosingPricesMeanDiffSquaredSumA) *\n      Math.sqrt(prevClosingPricesMeanDiffSquaredSumB))\n  );\n};\n","import { ICandleDayReturnProps } from \"node-upbit/lib/@types/quotation\";\n\nexport const calcIncreaseRatioOfMA = (\n  candles: Array<ICandleDayReturnProps>,\n  interval: number\n) => {\n  if (candles.length < interval) {\n    throw new Error(\"the inverval is bigger than the passed data \");\n  }\n  const MAArray = returnMAArray(candles, interval);\n  return (MAArray[MAArray.length - 1] - MAArray[0]) / MAArray[0];\n};\n\nexport const returnMAArray = (\n  candles: Array<ICandleDayReturnProps>,\n  interval: number\n) => {\n  const dateAscendingCandle =\n    new Date(candles[0].candle_date_time_utc).getTime() -\n      new Date(candles[candles.length - 1].candle_date_time_utc).getTime() >\n    0\n      ? [...candles].reverse()\n      : candles;\n\n  const maArray: Array<number> = [];\n  const totalCount = dateAscendingCandle.length;\n  const prevClosingPrices = dateAscendingCandle.map(\n    (el) => el.prev_closing_price\n  );\n  for (let i = 0; i < totalCount - (interval - 1); i++) {\n    const temp_array = prevClosingPrices.slice(i, i + (interval - 1));\n    const average = temp_array.reduce((a, b) => a + b, 0);\n    maArray.push(average);\n  }\n  return maArray;\n};\n","import { getDayCandles, getTicker } from \"api/upbit\";\nimport { ICandleDayReturnProps } from \"node-upbit/lib/@types/quotation\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { calcCorrelationCoefficient } from \"utils/quant/correlation\";\nimport { calcIncreaseRatioOfMA } from \"utils/quant/movingAverage\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface CryptoContextElements {\n  cryptoData: Map<string, CryptoDataFields> | undefined;\n}\n\nconst CryptoContext = createContext<CryptoContextElements>(\n  {} as CryptoContextElements\n);\n\nexport type CryptoDataFields = {\n  increaseRatio: number;\n  coefficient?: number;\n  volume?: number;\n};\n\nconst allowedCoins = [\"KRW-BTC\"];\n\nconst CryptoContextProvider: React.FC<Props> = ({ children }) => {\n  const [cryptoData, setCryptoData] = useState<Map<string, CryptoDataFields>>(\n    new Map()\n  );\n  const retrieveOtherCryptoData = useCallback(\n    async (\n      market: string,\n      dayCount: number,\n      btcDayCandles: ICandleDayReturnProps[]\n    ) => {\n      const otherCryptoDayCandles = await getDayCandles(market, dayCount);\n      const volume = otherCryptoDayCandles[0].candle_acc_trade_price;\n      const increaseRatio = calcIncreaseRatioOfMA(otherCryptoDayCandles, 20);\n      const coefficient = calcCorrelationCoefficient(\n        btcDayCandles,\n        otherCryptoDayCandles\n      );\n      setCryptoData((prev) => {\n        const newMap = new Map(prev);\n        newMap.set(market, { increaseRatio, coefficient, volume });\n        return newMap;\n      });\n    },\n    []\n  );\n  useEffect(() => {\n    getDayCandles(\"KRW-BTC\", 30)\n      .then((res) => {\n        const data = res;\n        const increaseRatio = calcIncreaseRatioOfMA(data, 20);\n        setCryptoData(\n          (prev) => new Map([...prev, [\"KRW-BTC\", { increaseRatio }]])\n        );\n        return data;\n      })\n      // we need btc data first to calculate others\n      .then((btcCandles) => {\n        retrieveOtherCryptoData(\"KRW-ETH\", 30, btcCandles);\n        retrieveOtherCryptoData(\"KRW-ETC\", 30, btcCandles);\n        retrieveOtherCryptoData(\"KRW-MLK\", 30, btcCandles);\n        retrieveOtherCryptoData(\"KRW-BTG\", 30, btcCandles);\n        retrieveOtherCryptoData(\"KRW-XRP\", 30, btcCandles);\n        retrieveOtherCryptoData(\"KRW-DOGE\", 30, btcCandles);\n      });\n\n    getTicker(\"KRW-BTC\").then((res) => {\n      console.log(res);\n    });\n\n    // upbitApi\n    //   .candlesDay(\"KRW-ETH\", 60)\n    //   .then((res) => {\n    //     console.log(res);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    // upbitApi.candlesDay(\"KRW-DOGE\", 60).then((res) => {\n    //   console.log(res);\n    // });\n    // upbitApi.ticker([\"KRW-BTC\"]).then((res) => {\n    //   console.log(res[0]);\n    // });\n  }, []);\n\n  const [cryptoCodes, setCryptoCodes] = useState<Array<string>>([]);\n  return (\n    <CryptoContext.Provider value={{ cryptoData }}>\n      {children}\n    </CryptoContext.Provider>\n  );\n};\n\nexport { CryptoContext, CryptoContextProvider };\n","export const clamp = (value: number, min: number, max: number) => {\n  return Math.max(min, Math.min(value, max));\n};\n\nexport const changeRelativeValueToRealValue = (\n  value: number,\n  inputMin: number,\n  inputMax: number,\n  returnMin: number,\n  returnMax: number\n) => {\n  let relativeValue = value;\n  if (relativeValue > inputMax) {\n    relativeValue = inputMax;\n  }\n  if (relativeValue < inputMin) {\n    relativeValue = inputMin;\n  }\n  // this relativeInputValue will be a value between 0 and 1 always\n  const relativeInputValue = (relativeValue - inputMin) / (inputMax - inputMin);\n\n  return relativeInputValue * (returnMax - returnMin) + returnMin;\n};\n\nexport const changeRelativeValueToRealValueInversed = (\n  value: number,\n  inputMin: number,\n  inputMax: number,\n  returnMin: number,\n  returnMax: number\n) => {\n  let relativeValue = value;\n  if (relativeValue > inputMax) {\n    relativeValue = inputMax;\n  }\n  if (relativeValue < inputMin) {\n    relativeValue = inputMin;\n  }\n  // this relativeInputValue will be a value between 0 and 1 always\n  const relativeInputValue =\n    1 - (relativeValue - inputMin) / (inputMax - inputMin);\n\n  return relativeInputValue * (returnMax - returnMin) + returnMin;\n};\n","import { Vector2 } from \"./Vector2\";\nimport { Vector3 } from \"./Vector3\";\n\n//this is also an affine vector for vector3\nexport class Vector4 {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n\n  static One = new Vector4(1, 1, 1, 1);\n  static Zero = new Vector4(0, 0, 0, 0);\n  static UnitX = new Vector4(1, 0, 0, 0);\n  static UnitY = new Vector4(0, 1, 0, 0);\n  static UnitZ = new Vector4(0, 0, 1, 0);\n  static UnitW = new Vector4(0, 0, 0, 1);\n\n  constructor(x: number, y: number, z: number, w: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w || 0;\n  }\n  add(v: Vector4) {\n    return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n  }\n  subtract(v: Vector4) {\n    return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n  }\n  negative(): Vector4 {\n    return new Vector4(-this.x, -this.y, -this.z, -this.w);\n  }\n  dot(v: Vector4): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n  clone(): Vector4 {\n    return new Vector4(this.x, this.y, this.z, this.w);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector4(this.x * n, this.y * n, this.z * n, this.w * n);\n  }\n  equals(v: Vector4) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y, this.z, this.w];\n  }\n  toVector2() {\n    return new Vector2(this.x, this.y);\n  }\n\n  toVector3() {\n    return new Vector3(this.x, this.y, this.z);\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n}\n","//https://evanw.github.io/lightgl.js/docs/vector.html\n\nimport { Vector2 } from \"./Vector2\";\nimport { Vector4 } from \"./Vector4\";\n\nexport class Vector3 {\n  x: number;\n  y: number;\n  z: number;\n\n  static One = new Vector3(1, 1, 1);\n  static Zero = new Vector3(0, 0, 0);\n  static UnitX = new Vector3(1, 0, 0);\n  static UnitY = new Vector3(0, 1, 0);\n  static UnitZ = new Vector3(0, 0, 1);\n  constructor(x: number, y: number, z: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n  add(v: Vector3) {\n    return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n  subtract(v: Vector3) {\n    return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n  negative(): Vector3 {\n    return new Vector3(-this.x, -this.y, -this.z);\n  }\n  dot(v: Vector3): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n  clone(): Vector3 {\n    return new Vector3(this.x, this.y, this.z);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector3(this.x * n, this.y * n, this.z * n);\n  }\n  equals(v: Vector3) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n  toAffine(isPoint: boolean): Vector4 {\n    return new Vector4(this.x, this.y, this.z, isPoint ? 1 : 0);\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y, this.z];\n  }\n  toVector2() {\n    return new Vector2(this.x, this.y);\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n}\n","//https://evanw.github.io/lightgl.js/docs/vector.html\n\nimport { Vector3 } from \"./Vector3\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  static One = new Vector2(1, 1);\n  static Zero = new Vector2(0, 0);\n  static UnitX = new Vector2(1, 0);\n  static UnitY = new Vector2(0, 1);\n  constructor(x: number, y: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(v: Vector2) {\n    return new Vector2(this.x + v.x, this.y + v.y);\n  }\n  subtract(v: Vector2) {\n    return new Vector2(this.x - v.x, this.y - v.y);\n  }\n  negative(): Vector2 {\n    return new Vector2(-this.x, -this.y);\n  }\n  dot(v: Vector2): number {\n    return this.x * v.x + this.y * v.y;\n  }\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector2(this.x * n, this.y * n);\n  }\n  equals(v: Vector2) {\n    return this.x === v.x && this.y === v.y;\n  }\n  toAffine(isPoint: boolean): Vector3 {\n    return new Vector3(this.x, this.y, isPoint ? 1 : 0);\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y];\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n  toScreenPointVector(): Vector2 {\n    return new Vector2(Math.floor(this.x), Math.floor(this.y));\n  }\n}\n","import { Vector2 } from \"./math/Vector2\";\n\nexport const convertCartesianToScreenPoint = (\n  canvas: HTMLCanvasElement,\n  cartesianPoint: Vector2\n) => {\n  const screenPoint = cartesianPoint.add(\n    new Vector2(canvas.width / 2, canvas.height / 2)\n  );\n  return screenPoint;\n};\n","import { Vector2 } from \"./Vector2\";\n\nexport class Matrix2x2 {\n  Cols: Array<Vector2>;\n\n  constructor(\n    InCol0: Vector2 = Vector2.UnitX,\n    InCol1: Vector2 = Vector2.UnitY\n  ) {\n    this.Cols = [InCol0, InCol1];\n  }\n  transpose() {\n    return new Matrix2x2(\n      new Vector2(this.Cols[0].x, this.Cols[1].x),\n      new Vector2(this.Cols[0].y, this.Cols[1].y)\n    );\n  }\n\n  add(m: Matrix2x2) {\n    const col_1 = this.Cols[0].add(m.Cols[0]);\n    const col_2 = this.Cols[1].add(m.Cols[1]);\n    return new Matrix2x2(col_1, col_2);\n  }\n  subtract(m: Matrix2x2) {\n    const col_1 = this.Cols[0].subtract(m.Cols[0]);\n    const col_2 = this.Cols[1].subtract(m.Cols[1]);\n    return new Matrix2x2(col_1, col_2);\n  }\n  scalarBy(x: number) {\n    return new Matrix2x2(this.Cols[0].scalarBy(x), this.Cols[1].scalarBy(x));\n  }\n  negative() {\n    const col_1 = this.Cols[0].negative();\n    const col_2 = this.Cols[1].negative();\n    return new Matrix2x2(col_1, col_2);\n  }\n  determinant() {\n    return this.Cols[0].x * this.Cols[1].y - this.Cols[0].y - this.Cols[1].x;\n  }\n\n  multiplyMatrix(m: Matrix2x2) {\n    const transposedMatrix = this.transpose();\n    return new Matrix2x2(\n      new Vector2(\n        transposedMatrix.Cols[0].dot(m.Cols[0]),\n        transposedMatrix.Cols[1].dot(m.Cols[0])\n      ),\n      new Vector2(\n        transposedMatrix.Cols[0].dot(m.Cols[1]),\n        transposedMatrix.Cols[1].dot(m.Cols[1])\n      )\n    );\n  }\n\n  multiplyVector(v: Vector2) {\n    const transposedMatrix = this.transpose();\n    return new Vector2(\n      transposedMatrix.Cols[0].dot(v),\n      transposedMatrix.Cols[1].dot(v)\n    );\n  }\n}\n","import { Matrix2x2 } from \"./Matrix2x2\";\nimport { Vector3 } from \"./Vector3\";\n\nexport class Matrix3x3 {\n  Cols: Array<Vector3>;\n\n  constructor(\n    InCol0: Vector3 = Vector3.UnitX,\n    InCol1: Vector3 = Vector3.UnitY,\n    InCol2: Vector3 = Vector3.UnitZ\n  ) {\n    this.Cols = [InCol0, InCol1, InCol2];\n  }\n\n  transpose() {\n    return new Matrix3x3(\n      new Vector3(this.Cols[0].x, this.Cols[1].x, this.Cols[2].x),\n      new Vector3(this.Cols[0].y, this.Cols[1].y, this.Cols[2].y),\n      new Vector3(this.Cols[0].z, this.Cols[1].z, this.Cols[2].z)\n    );\n  }\n\n  add(m: Matrix3x3) {\n    const col_1 = this.Cols[0].add(m.Cols[0]);\n    const col_2 = this.Cols[1].add(m.Cols[1]);\n    const col_3 = this.Cols[2].add(m.Cols[2]);\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n  subtract(m: Matrix3x3) {\n    const col_1 = this.Cols[0].subtract(m.Cols[0]);\n    const col_2 = this.Cols[1].subtract(m.Cols[1]);\n    const col_3 = this.Cols[2].subtract(m.Cols[2]);\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n\n  scalarBy(x: number) {\n    return new Matrix3x3(\n      this.Cols[0].scalarBy(x),\n      this.Cols[1].scalarBy(x),\n      this.Cols[2].scalarBy(x)\n    );\n  }\n\n  negative() {\n    const col_1 = this.Cols[0].negative();\n    const col_2 = this.Cols[1].negative();\n    const col_3 = this.Cols[2].negative();\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n\n  determinant() {}\n\n  multiplyMatrix(m: Matrix3x3) {\n    const transposedMatrix = this.transpose();\n    return new Matrix3x3(\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[0]),\n        transposedMatrix.Cols[1].dot(m.Cols[0]),\n        transposedMatrix.Cols[2].dot(m.Cols[0])\n      ),\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[1]),\n        transposedMatrix.Cols[1].dot(m.Cols[1]),\n        transposedMatrix.Cols[2].dot(m.Cols[1])\n      ),\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[2]),\n        transposedMatrix.Cols[1].dot(m.Cols[2]),\n        transposedMatrix.Cols[2].dot(m.Cols[2])\n      )\n    );\n  }\n\n  multiplyVector(v: Vector3) {\n    const transposedMatrix = this.transpose();\n    return new Vector3(\n      transposedMatrix.Cols[0].dot(v),\n      transposedMatrix.Cols[1].dot(v),\n      transposedMatrix.Cols[2].dot(v)\n    );\n  }\n\n  toMatrix2x2() {\n    return new Matrix2x2(this.Cols[0].toVector2(), this.Cols[1].toVector2());\n  }\n}\n","import { Matrix2x2 } from \"./math/Matrix2x2\";\nimport { Matrix3x3 } from \"./math/Matrix3x3\";\nimport { Vector2 } from \"./math/Vector2\";\n\nexport class Rotator2D {\n  degree: number;\n  static getClampedValue(InDegree: number) {\n    let angle = InDegree % 360;\n    if (angle < 0) {\n      angle += 360;\n    }\n    return angle;\n  }\n  constructor(InDegree: number) {\n    this.degree = InDegree;\n  }\n  clamp() {\n    this.degree = Rotator2D.getClampedValue(this.degree);\n  }\n  toRadian() {\n    this.clamp();\n    return (this.degree * Math.PI) / 180;\n  }\n  update(newDegree: number) {\n    this.degree = Rotator2D.getClampedValue(newDegree);\n  }\n  getRotateMatrix() {\n    const cos = Math.cos(this.toRadian());\n    const sin = Math.sin(this.toRadian());\n    const rotateMatrix: Matrix2x2 = new Matrix2x2(\n      new Vector2(cos, sin),\n      new Vector2(-sin, cos)\n    );\n    return rotateMatrix;\n  }\n  getRotateAffineMatrix() {\n    const cos = Math.cos(this.toRadian());\n    const sin = Math.sin(this.toRadian());\n    const rotateMatrix: Matrix3x3 = new Matrix3x3(\n      new Vector2(cos, sin).toAffine(false),\n      new Vector2(-sin, cos).toAffine(false),\n      undefined //UnitZ\n    );\n    return rotateMatrix;\n  }\n}\n","import { Vector2 } from \"utils/math/Vector2\";\n\nexport class Continent {\n  canvas: HTMLCanvasElement;\n  points: Vector2[];\n  scale: number = 1;\n  constructor(canvas: HTMLCanvasElement, points: Vector2[], scale = 1) {\n    this.canvas = canvas;\n    this.points = points;\n    this.scale = scale;\n  }\n\n  draw(origin: Vector2, color: { r: number; g: number; b: number; a: number }) {\n    const ctx = this.canvas.getContext(\"2d\")!;\n\n    ctx.save();\n    // ctx.transform(1, 0, 0, -1, origin.x * 2, origin.y * 2);\n\n    ctx.beginPath();\n\n    ctx.moveTo(\n      this.points[0].x * this.scale + origin.x,\n      -this.points[0].y * this.scale + origin.y\n    );\n\n    for (const point of this.points) {\n      ctx.lineTo(\n        point.x * this.scale + origin.x,\n        -point.y * this.scale + origin.y\n      );\n    }\n\n    ctx.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n    ctx.fill();\n\n    ctx.closePath();\n\n    ctx.restore();\n    return;\n  }\n}\n","import { Vector2 } from \"utils/math/Vector2\";\n\nexport const Continent1: Array<Vector2> = [\n  new Vector2(0, 0.7),\n  new Vector2(-0.4, 1),\n  new Vector2(-0.8, 0.6),\n  new Vector2(-0.5, 0.1),\n  new Vector2(-0.15, 0),\n  new Vector2(-0.1, -0.6),\n  new Vector2(0.1, -0.8),\n  new Vector2(0.3, -0.5),\n  new Vector2(0.45, 0),\n  new Vector2(0.7, 0.3),\n  new Vector2(0.6, 0.6),\n  new Vector2(0.2, 0.76),\n];\n\nexport const Continent2: Array<Vector2> = [\n  new Vector2(0.3, 0.8),\n  new Vector2(-0.3, 0.7),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.1, 0),\n  new Vector2(-0.2, -0.2),\n  new Vector2(0.2, -0.6),\n  new Vector2(0.6, -0.1),\n  new Vector2(0.4, 0.15),\n  new Vector2(0.5, 0.4),\n];\n\nexport const Continent3: Array<Vector2> = [\n  new Vector2(-0.1, 0.5),\n  new Vector2(-0.7, 0.2),\n  new Vector2(-0.6, -0.3),\n  new Vector2(-0.2, -0.4),\n  new Vector2(0.3, -0.35),\n  new Vector2(0.6, -0.1),\n  new Vector2(0.65, 0.1),\n  new Vector2(0.4, 0.5),\n  new Vector2(0.2, 0.35),\n];\n\nexport const Continent4: Array<Vector2> = [\n  new Vector2(-0.3, 0.35),\n  new Vector2(-0.7, 0.1),\n  new Vector2(-0.4, -0.2),\n  new Vector2(0.1, 0.05),\n  new Vector2(0.45, -0.15),\n  new Vector2(0.75, 0.1),\n  new Vector2(0.4, 0.4),\n  new Vector2(0.1, 0.3),\n];\n\nexport const Continent5: Array<Vector2> = [\n  new Vector2(-0.5, 0.5),\n  new Vector2(-0.7, 0.3),\n  new Vector2(-0.3, 0),\n  new Vector2(-0.4, -0.4),\n  new Vector2(0, -0.8),\n  new Vector2(0.8, -0.5),\n  new Vector2(0.9, -0.3),\n  new Vector2(0.2, 0.4),\n];\n\nexport const Continent6: Array<Vector2> = [\n  new Vector2(0, 0.9),\n  new Vector2(-0.5, 0.7),\n  new Vector2(-0.2, 0.2),\n  new Vector2(-0.4, -0.4),\n  new Vector2(0.3, -0.2),\n  new Vector2(0.5, 0),\n  new Vector2(0.6, 0.7),\n];\n\nexport const Continent7: Array<Vector2> = [\n  new Vector2(0, 0.7),\n  new Vector2(-0.5, 0.6),\n  new Vector2(-0.3, 0.1),\n  new Vector2(0, 0),\n  new Vector2(0.1, -0.6),\n  new Vector2(0.45, 0),\n  new Vector2(0.7, 0.3),\n  new Vector2(0.6, 0.6),\n  new Vector2(0.2, 0.76),\n];\n\nexport const Continent8: Array<Vector2> = [\n  new Vector2(0, 0.8),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.5, 0.1),\n  new Vector2(-0.4, -0.4),\n  new Vector2(-0.2, -0.6),\n  new Vector2(0.3, -0),\n  new Vector2(0.4, 0.15),\n  new Vector2(0.5, 0.4),\n];\n\nexport const Continent9: Array<Vector2> = [\n  new Vector2(-0.5, 0.35),\n  new Vector2(-0.4, 0.1),\n  new Vector2(-0.1, -0.2),\n  new Vector2(0.3, -0.5),\n  new Vector2(0.6, -0.15),\n  new Vector2(0.9, 0.1),\n  new Vector2(0.45, 0.4),\n  new Vector2(0.1, 0.3),\n];\n\nexport const Continent10: Array<Vector2> = [\n  new Vector2(-0.4, 0.5),\n  new Vector2(-0.5, 0.2),\n  new Vector2(-0.8, -0.5),\n  new Vector2(-0.5, -0.4),\n  new Vector2(0.1, -0.35),\n  new Vector2(0.4, -0.3),\n  new Vector2(0.65, 0.1),\n  new Vector2(0.4, 0.2),\n  new Vector2(0.2, 0.4),\n];\n\nexport const ContinentSamples = [\n  Continent1,\n  Continent2,\n  Continent3,\n  Continent4,\n  Continent5,\n  Continent6,\n  Continent7,\n  Continent8,\n  Continent9,\n  Continent10,\n];\n","import { convertCartesianToScreenPoint } from \"../../utils/cartesian\";\nimport { Vector2 } from \"../../utils/math/Vector2\";\nimport { Rotator2D } from \"../../utils/rotator2d\";\nimport { Continent } from \"./Continent\";\nimport { ContinentSamples } from \"./Continents/Examples\";\nimport { Spaceship } from \"./Spaceship\";\n\nexport class Planet {\n  name: string;\n  canvas: HTMLCanvasElement;\n  rotator: Rotator2D;\n  radius: number;\n  position: Vector2;\n  speed: number;\n  distanceFromSun: number;\n  spaceShips: Array<Spaceship>;\n  continents: Array<Continent>;\n  continentOrigins: Array<Vector2>;\n  ctx: CanvasRenderingContext2D;\n  constructor(\n    canvas: HTMLCanvasElement,\n    distanceFromSun: number,\n    speed: number,\n    radius: number,\n    name: string\n  ) {\n    this.name = name;\n    this.canvas = canvas;\n    this.speed = speed;\n    this.rotator = new Rotator2D(Math.random() * 360);\n    this.distanceFromSun = distanceFromSun;\n    this.radius = radius;\n    this.spaceShips = [];\n    this.ctx = this.canvas.getContext(\"2d\")!;\n    const positionAffineVector = new Vector2(distanceFromSun, 0).toAffine(true);\n    const rotateAffineMatrix = this.rotator.getRotateAffineMatrix();\n    const shuffledContinents = ContinentSamples.sort(() => 0.5 - Math.random());\n    const selectedContinents = shuffledContinents.slice(0, 5);\n    this.continents = selectedContinents.map((continent) => {\n      return new Continent(this.canvas, continent, 20);\n    });\n    this.position = rotateAffineMatrix\n      .multiplyVector(positionAffineVector)\n      .toVector2();\n    this.continentOrigins = [\n      new Vector2(0, -this.radius),\n      new Vector2(0, this.radius),\n    ];\n    const leftOriginCount =\n      this.continents.length - this.continentOrigins.length;\n    for (let i = 0; i < leftOriginCount; i++) {\n      const angle = (Math.PI * 2) / leftOriginCount;\n      const origin = new Vector2(\n        Math.cos(angle * i),\n        Math.sin(angle * i)\n      ).scalarBy(Math.random() * this.radius);\n      this.continentOrigins.push(origin);\n    }\n  }\n\n  drawContinents(origin: Vector2) {\n    for (const continentOrigin of this.continentOrigins) {\n      const continent = this.continents.shift()!;\n      this.ctx.save();\n      this.ctx.arc(origin.x, origin.y, this.radius, 0, 2 * Math.PI, false);\n      this.ctx.clip();\n      continent.draw(origin.add(continentOrigin), {\n        r: 255,\n        g: 0,\n        b: 255,\n        a: 1,\n      });\n      this.ctx.restore();\n      this.continents.push(continent);\n    }\n    // const northPoleContinent = this.continents[0];\n    // const southPoleContinent = this.continents[1];\n    // northPoleContinent.draw(origin.subtract(new Vector2(0, this.radius)), {\n    //   r: 255,\n    //   g: 0,\n    //   b: 255,\n    //   a: 1,\n    // });\n    // southPoleContinent.draw(origin.add(new Vector2(0, this.radius)), {\n    //   r: 255,\n    //   g: 0,\n    //   b: 255,\n    //   a: 1,\n    // });\n    // for (let i = 2; i < this.continents.length; i++) {\n    //   const continent = this.continents[i];\n    //   continent.draw(origin, {\n    //     r: 255,\n    //     g: 0,\n    //     b: 255,\n    //     a: 1,\n    //   });\n    // }\n  }\n\n  draw() {\n    this.rotator.degree += this.speed;\n    const positionAffineVector = new Vector2(this.distanceFromSun, 0).toAffine(\n      true\n    );\n    const rotateAffineMatrix = this.rotator.getRotateAffineMatrix();\n    this.position = rotateAffineMatrix\n      .multiplyVector(positionAffineVector)\n      .toVector2();\n    const drawPosition = convertCartesianToScreenPoint(\n      this.canvas,\n      this.position\n    );\n\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.arc(\n      drawPosition.x,\n      drawPosition.y,\n      this.radius,\n      0,\n      2 * Math.PI,\n      false\n    );\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fill();\n\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(\n      this.name,\n      drawPosition.x,\n      drawPosition.y + this.radius + 15\n    );\n    this.ctx.closePath();\n    this.ctx.restore();\n\n    this.drawContinents(drawPosition);\n  }\n}\n","import { convertCartesianToScreenPoint } from \"../../utils/cartesian\";\nimport { Vector2 } from \"../../utils/math/Vector2\";\n\nexport class Sun {\n  canvas: HTMLCanvasElement;\n  radius = 150;\n  color = \"#FFFF4D\";\n  brightness: number = 0;\n  position: Vector2 = new Vector2(0, 0);\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n  }\n\n  setBrightness(brightness: number) {\n    console.log(brightness);\n    this.brightness = brightness;\n  }\n\n  clampBrightnessRadius(radius: number, clampMaxValue: number) {\n    const adjustedRadius = radius * 10000000;\n\n    if (adjustedRadius > clampMaxValue) {\n      return clampMaxValue;\n    }\n    if (adjustedRadius < 0) {\n      return 0;\n    }\n    return adjustedRadius;\n  }\n\n  drawBrightnessInner(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(\n      drawPosition.x,\n      drawPosition.y,\n      this.radius + this.clampBrightnessRadius(this.brightness, 10),\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawBrightnessOuter(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(\n      drawPosition.x,\n      drawPosition.y,\n      this.radius + this.clampBrightnessRadius(this.brightness, 20),\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawSun(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(drawPosition.x, drawPosition.y, this.radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.restore();\n  }\n  draw() {\n    const ctx = this.canvas.getContext(\"2d\")!;\n    const drawPosition = convertCartesianToScreenPoint(\n      this.canvas,\n      this.position\n    );\n    this.drawBrightnessInner(drawPosition, ctx);\n    this.drawBrightnessOuter(drawPosition, ctx);\n    this.drawSun(drawPosition, ctx);\n  }\n}\n","import {\n  changeRelativeValueToRealValue,\n  changeRelativeValueToRealValueInversed,\n  clamp,\n} from \"utils/clamp\";\nimport { Planet } from \"./Planet\";\nimport { Sun } from \"./Sun\";\n\nexport class GalaxyCanvas {\n  private fps = 24;\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  width: number = 0;\n  height: number = 0;\n  sun: Sun;\n  planets: Array<Planet> = [];\n  requestAnimationFrameId: number;\n  MIN_PLANET_SIZE = 15;\n  MAX_PLANET_SIZE = 100;\n  constructor(element: HTMLCanvasElement) {\n    this.element = element;\n    this.ctx = element.getContext(\"2d\")!;\n\n    this.sun = new Sun(element);\n\n    this.render();\n    this.requestAnimationFrameId = requestAnimationFrame(this.render);\n    this.planets = [];\n    // this.continents.push(new Continent(element, Continent1, 100));\n    // this.continents.push(new Continent(element, Continent2, 100));\n    // this.continents.push(new Continent(element, Continent3, 100));\n    // this.continents.push(new Continent(element, Continent4, 100));\n    // this.continents.push(new Continent(element, Continent5, 100));\n    // this.continents.push(new Continent(element, Continent6, 100));\n    // this.continents.push(new Continent(element, Continent7, 100));\n    // this.continents.push(new Continent(element, Continent8, 100));\n    // this.continents.push(new Continent(element, Continent9, 100));\n    // this.continents.push(new Continent(element, Continent10, 100));\n    this.initialize();\n  }\n  updateFrame = () => {\n    // this.drawAll();\n    this.render();\n    setTimeout(() => {\n      this.requestAnimationFrameId = requestAnimationFrame(\n        this.updateFrame.bind(this)\n      );\n    }, 1000 / this.fps);\n  };\n\n  addPlanet(\n    name: string,\n    increaseRatio: number,\n    correlationCoefficient: number,\n    volume: number\n  ) {\n    console.log(correlationCoefficient, increaseRatio, name);\n    const minDistance = this.sun.radius + 10;\n    const maxDistance = 400 + this.sun.radius;\n    const distance = changeRelativeValueToRealValueInversed(\n      // the bigger the correlation coefficient\n      // the more similar is it to the sun\n      correlationCoefficient,\n      -0.1,\n      0.2,\n      minDistance,\n      maxDistance\n    );\n    const maxSpeed = 0.3;\n    const minSpeed = 0.02;\n\n    const speed = changeRelativeValueToRealValue(\n      increaseRatio,\n      0,\n      1,\n      minSpeed,\n      maxSpeed\n    );\n\n    const size = changeRelativeValueToRealValue(\n      volume,\n      100_000_000,\n      1_000_000_000_000,\n      this.MIN_PLANET_SIZE,\n      this.MAX_PLANET_SIZE\n    );\n    const planet = new Planet(this.element, distance, speed, size, name);\n    this.planets.push(planet);\n  }\n\n  initialize() {\n    // this.planets.push(new Planet(this.element, this.sun.radius + 50, 1, 80));\n  }\n\n  setWidth(width: number, devicePixelRatio?: number) {\n    this.width = width;\n    this.element.width = devicePixelRatio ? width * devicePixelRatio : width;\n    this.element.style.width = `${width}px`;\n  }\n\n  setHeight(height: number, devicePixelRatio?: number) {\n    this.height = height;\n    this.element.height = devicePixelRatio ? height * devicePixelRatio : height;\n    this.element.style.height = `${height}px`;\n  }\n\n  setSize(width: number, height: number, devicePixelRatio?: number) {\n    this.setWidth(width, devicePixelRatio);\n    this.setHeight(height, devicePixelRatio);\n  }\n\n  drawBackground() {\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n\n  render = () => {\n    this.clear();\n    this.drawScene();\n    setTimeout(() => {\n      requestAnimationFrame(this.render.bind(this));\n    }, 1000 / this.fps);\n  };\n\n  drawScene() {\n    this.drawBackground();\n    this.drawGalaxyComponents();\n  }\n\n  drawDummy() {}\n\n  drawGalaxyComponents() {\n    this.sun.draw();\n    for (const planet of this.planets) {\n      planet.draw();\n    }\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  destroy() {\n    this.clear();\n    this.planets = [];\n  }\n}\n","import { CryptoContext } from \"context/CryptoContext\";\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { GalaxyCanvas } from \"./Canvas\";\n\ninterface Props {}\n\nconst Galaxy: React.FC<Props> = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n  const galaxyCanvasRef = useRef<GalaxyCanvas | null>(null);\n  const { cryptoData } = useContext(CryptoContext);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return () => {};\n    }\n    const galaxyCanvas = new GalaxyCanvas(canvasRef.current);\n    galaxyCanvasRef.current = galaxyCanvas;\n    return () => {\n      if (galaxyCanvasRef.current) {\n        galaxyCanvasRef.current.destroy();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!cryptoData || !galaxyCanvasRef.current) {\n      return;\n    }\n    for (const crypto of cryptoData) {\n      if (crypto[0] === \"KRW-BTC\") {\n        //krw-btc is sun\n        galaxyCanvasRef.current.sun.setBrightness(crypto[1].increaseRatio);\n      } else {\n        if (\n          !galaxyCanvasRef.current.planets\n            .map((planet) => planet.name)\n            .includes(crypto[0]) &&\n          crypto[1].coefficient &&\n          crypto[1].volume\n        ) {\n          galaxyCanvasRef.current.addPlanet(\n            crypto[0],\n            crypto[1].increaseRatio,\n            crypto[1].coefficient,\n            crypto[1].volume\n          );\n        }\n      }\n    }\n  }, [cryptoData]);\n\n  useEffect(() => {\n    const onResize = () => {\n      if (!divRef.current || !galaxyCanvasRef.current) {\n        return;\n      }\n      const rect = divRef.current.getBoundingClientRect();\n\n      galaxyCanvasRef.current.setSize(rect.width, rect.height);\n      galaxyCanvasRef.current.drawScene();\n    };\n\n    onResize();\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"fixed\",\n      }}\n      ref={divRef}\n    >\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default Galaxy;\n","import React, { useRef } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Galaxy from \"./components/Galaxy\";\nimport { CryptoContextProvider } from \"./context/CryptoContext\";\n\nfunction App() {\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}\n    >\n      {/* <header>\n        <h1>Crypto Galaxy</h1>\n      </header> */}\n      <CryptoContextProvider>\n        <Galaxy />\n      </CryptoContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}