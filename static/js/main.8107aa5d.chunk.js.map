{"version":3,"sources":["api/upbit.ts","utils/quant/movingAverage.ts","context/CryptoContext.tsx","utils/math/Vector4.ts","utils/math/Vector3.ts","utils/math/Vector2.ts","components/Galaxy/Continent.ts","components/Galaxy/Continents/Examples.ts","utils/cartesian.ts","utils/math/Matrix2x2.ts","utils/math/Matrix3x3.ts","utils/rotator2d.ts","components/Galaxy/Planet.ts","components/Galaxy/Sun.ts","components/Galaxy/Canvas.ts","components/Galaxy/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PROXY_API_URL","getDayCandles","market","count","axios","get","res","console","log","data","getTicker","calcIncreaseRatioOfMA","candles","interval","length","Error","MAArray","returnMAArray","dateAscendingCandle","Date","candle_date_time_utc","getTime","reverse","maArray","totalCount","prevClosingPrices","map","el","prev_closing_price","i","average","slice","reduce","a","b","push","CryptoContext","createContext","CryptoContextProvider","children","useState","Map","cryptoData","setCryptoData","useEffect","then","increaseRatio","prev","Provider","value","Vector4","x","y","z","w","this","v","Math","sqrt","dot","n","Vector2","Vector3","scalarBy","One","Zero","UnitX","UnitY","UnitZ","UnitW","isPoint","floor","Continent","canvas","points","scale","origin","color","ctx","getContext","save","beginPath","moveTo","point","lineTo","fillStyle","r","g","fill","closePath","restore","Continent1","Continent2","Continent3","Continent4","Continent5","Continent6","Continent7","Continent8","Continent9","Continent10","ContinentSamples","convertCartesianToScreenPoint","cartesianPoint","add","width","height","Matrix2x2","InCol0","InCol1","Cols","m","subtract","negative","transposedMatrix","transpose","Matrix3x3","InCol2","toVector2","Rotator2D","InDegree","degree","getClampedValue","clamp","PI","newDegree","cos","toRadian","sin","toAffine","undefined","angle","Planet","distanceFromSun","speed","radius","rotator","position","spaceShips","continents","continentOrigins","random","positionAffineVector","rotateAffineMatrix","getRotateAffineMatrix","selectedContinents","sort","continent","multiplyVector","leftOriginCount","continentOrigin","shift","draw","drawPosition","arc","drawContinents","Sun","brightness","clampMaxValue","adjustedRadius","clampBrightnessRadius","drawBrightnessInner","drawBrightnessOuter","drawSun","GalaxyCanvas","element","fps","sun","planets","requestAnimationFrameId","updateFrame","render","setTimeout","requestAnimationFrame","bind","clear","drawScene","initialize","devicePixelRatio","style","setWidth","setHeight","fillRect","drawBackground","drawGalaxyComponents","clearRect","Galaxy","canvasRef","useRef","divRef","galaxyCanvasRef","useContext","current","galaxyCanvas","crypto","setBrightness","onResize","rect","getBoundingClientRect","setSize","window","addEventListener","removeEventListener","ref","App","display","flexDirection","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.8107aa5d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  ICandleDayReturnProps,\n  ICandleReturnProps,\n  ITickerProps,\n} from \"node-upbit/lib/@types/quotation\";\n\n// const PROXY_API_URL = \"https://upbit-next-proxy.vercel.app/api/\";\n\nconst isDevMode = process.env.NODE_ENV === \"development\";\nconst PROXY_API_URL = isDevMode\n  ? \"/api/\"\n  : \"https://upbit-next-proxy.vercel.app/api/\";\n\nexport const getDayCandles = async (market: string, count: number) => {\n  const res = await axios.get(\n    PROXY_API_URL + \"days\" + `?market=${market}&count=${count}`\n  );\n  console.log(res);\n  return res.data.data as ICandleDayReturnProps[];\n};\n\nexport const getTicker = async (market: string) => {\n  const res = await axios.get(PROXY_API_URL + \"ticker\" + `?market=${market}`);\n  return res.data.data as ITickerProps;\n};\n\nexport const getMinuteCandles = async (market: string) => {\n  const res = await axios.get(PROXY_API_URL + \"minutes\" + `?market=${market}`);\n  return res.data.data as ICandleReturnProps[];\n};\n","import { ICandleDayReturnProps } from \"node-upbit/lib/@types/quotation\";\n\nexport const calcIncreaseRatioOfMA = (\n  candles: Array<ICandleDayReturnProps>,\n  interval: number\n) => {\n  if (candles.length < interval) {\n    throw new Error(\"the inverval is bigger than the passed data \");\n  }\n  const MAArray = returnMAArray(candles, interval);\n  return (MAArray[MAArray.length - 1] - MAArray[0]) / MAArray[0];\n};\n\nexport const returnMAArray = (\n  candles: Array<ICandleDayReturnProps>,\n  interval: number\n) => {\n  const dateAscendingCandle =\n    new Date(candles[0].candle_date_time_utc).getTime() -\n      new Date(candles[0].candle_date_time_utc).getTime() >\n    0\n      ? [...candles].reverse()\n      : candles;\n\n  const maArray: Array<number> = [];\n  const totalCount = dateAscendingCandle.length;\n  const prevClosingPrices = dateAscendingCandle.map(\n    (el) => el.prev_closing_price\n  );\n  for (let i = 0; i < totalCount - (interval - 1); i++) {\n    const temp_array = prevClosingPrices.slice(i, i + (interval - 1));\n    const average = temp_array.reduce((a, b) => a + b, 0);\n    maArray.push(average);\n  }\n  return maArray;\n};\n","import { getDayCandles, getTicker } from \"api/upbit\";\nimport axios from \"axios\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { calcIncreaseRatioOfMA } from \"utils/quant/movingAverage\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface CryptoContextElements {\n  cryptoData: Map<string, CryptoDataFields> | undefined;\n}\n\nconst CryptoContext = createContext<CryptoContextElements>(\n  {} as CryptoContextElements\n);\n\nexport type CryptoDataFields = {\n  increaseRatio: number;\n};\n\nconst allowedCoins = [\"KRW-BTC\"];\n\nconst CryptoContextProvider: React.FC<Props> = ({ children }) => {\n  const [cryptoData, setCryptoData] = useState<Map<string, CryptoDataFields>>(\n    new Map()\n  );\n  useEffect(() => {\n    getDayCandles(\"KRW-BTC\", 60).then((res) => {\n      const data = res;\n      const increaseRatio = calcIncreaseRatioOfMA(data, 20);\n      setCryptoData(\n        (prev) => new Map([...prev, [\"KRW-BTC\", { increaseRatio }]])\n      );\n    });\n    getDayCandles(\"KRW-ETH\", 60).then((res) => {\n      const data = res;\n      const increaseRatio = calcIncreaseRatioOfMA(data, 20);\n      setCryptoData(\n        (prev) => new Map([...prev, [\"KRW-ETH\", { increaseRatio }]])\n      );\n    });\n    getDayCandles(\"KRW-ETH\", 60).then((res) => {\n      const data = res;\n      const increaseRatio = calcIncreaseRatioOfMA(data, 20);\n      setCryptoData(\n        (prev) => new Map([...prev, [\"KRW-DOGE\", { increaseRatio }]])\n      );\n    });\n    getTicker(\"KRW-BTC\").then((res) => {\n      console.log(res);\n    });\n\n    // upbitApi\n    //   .candlesDay(\"KRW-ETH\", 60)\n    //   .then((res) => {\n    //     console.log(res);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    // upbitApi.candlesDay(\"KRW-DOGE\", 60).then((res) => {\n    //   console.log(res);\n    // });\n    // upbitApi.ticker([\"KRW-BTC\"]).then((res) => {\n    //   console.log(res[0]);\n    // });\n  }, []);\n\n  const [cryptoCodes, setCryptoCodes] = useState<Array<string>>([]);\n  return (\n    <CryptoContext.Provider value={{ cryptoData }}>\n      {children}\n    </CryptoContext.Provider>\n  );\n};\n\nexport { CryptoContext, CryptoContextProvider };\n","import { Vector2 } from \"./Vector2\";\nimport { Vector3 } from \"./Vector3\";\n\n//this is also an affine vector for vector3\nexport class Vector4 {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n\n  static One = new Vector4(1, 1, 1, 1);\n  static Zero = new Vector4(0, 0, 0, 0);\n  static UnitX = new Vector4(1, 0, 0, 0);\n  static UnitY = new Vector4(0, 1, 0, 0);\n  static UnitZ = new Vector4(0, 0, 1, 0);\n  static UnitW = new Vector4(0, 0, 0, 1);\n\n  constructor(x: number, y: number, z: number, w: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w || 0;\n  }\n  add(v: Vector4) {\n    return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n  }\n  subtract(v: Vector4) {\n    return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n  }\n  negative(): Vector4 {\n    return new Vector4(-this.x, -this.y, -this.z, -this.w);\n  }\n  dot(v: Vector4): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n  clone(): Vector4 {\n    return new Vector4(this.x, this.y, this.z, this.w);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector4(this.x * n, this.y * n, this.z * n, this.w * n);\n  }\n  equals(v: Vector4) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y, this.z, this.w];\n  }\n  toVector2() {\n    return new Vector2(this.x, this.y);\n  }\n\n  toVector3() {\n    return new Vector3(this.x, this.y, this.z);\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n}\n","//https://evanw.github.io/lightgl.js/docs/vector.html\n\nimport { Vector2 } from \"./Vector2\";\nimport { Vector4 } from \"./Vector4\";\n\nexport class Vector3 {\n  x: number;\n  y: number;\n  z: number;\n\n  static One = new Vector3(1, 1, 1);\n  static Zero = new Vector3(0, 0, 0);\n  static UnitX = new Vector3(1, 0, 0);\n  static UnitY = new Vector3(0, 1, 0);\n  static UnitZ = new Vector3(0, 0, 1);\n  constructor(x: number, y: number, z: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n  add(v: Vector3) {\n    return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n  subtract(v: Vector3) {\n    return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n  negative(): Vector3 {\n    return new Vector3(-this.x, -this.y, -this.z);\n  }\n  dot(v: Vector3): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n  clone(): Vector3 {\n    return new Vector3(this.x, this.y, this.z);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector3(this.x * n, this.y * n, this.z * n);\n  }\n  equals(v: Vector3) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n  toAffine(isPoint: boolean): Vector4 {\n    return new Vector4(this.x, this.y, this.z, isPoint ? 1 : 0);\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y, this.z];\n  }\n  toVector2() {\n    return new Vector2(this.x, this.y);\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n}\n","//https://evanw.github.io/lightgl.js/docs/vector.html\n\nimport { Vector3 } from \"./Vector3\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  static One = new Vector2(1, 1);\n  static Zero = new Vector2(0, 0);\n  static UnitX = new Vector2(1, 0);\n  static UnitY = new Vector2(0, 1);\n  constructor(x: number, y: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(v: Vector2) {\n    return new Vector2(this.x + v.x, this.y + v.y);\n  }\n  subtract(v: Vector2) {\n    return new Vector2(this.x - v.x, this.y - v.y);\n  }\n  negative(): Vector2 {\n    return new Vector2(-this.x, -this.y);\n  }\n  dot(v: Vector2): number {\n    return this.x * v.x + this.y * v.y;\n  }\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n  scalarBy(n: number) {\n    return new Vector2(this.x * n, this.y * n);\n  }\n  equals(v: Vector2) {\n    return this.x === v.x && this.y === v.y;\n  }\n  toAffine(isPoint: boolean): Vector3 {\n    return new Vector3(this.x, this.y, isPoint ? 1 : 0);\n  }\n  toArray(): Array<number> {\n    return [this.x, this.y];\n  }\n  normalize() {\n    return this.scalarBy(1 / this.length());\n  }\n  toScreenPointVector(): Vector2 {\n    return new Vector2(Math.floor(this.x), Math.floor(this.y));\n  }\n}\n","import { Vector2 } from \"utils/math/Vector2\";\n\nexport class Continent {\n  canvas: HTMLCanvasElement;\n  points: Vector2[];\n  scale: number = 1;\n  constructor(canvas: HTMLCanvasElement, points: Vector2[], scale = 1) {\n    this.canvas = canvas;\n    this.points = points;\n    this.scale = scale;\n  }\n\n  draw(origin: Vector2, color: { r: number; g: number; b: number; a: number }) {\n    const ctx = this.canvas.getContext(\"2d\")!;\n\n    ctx.save();\n    // ctx.transform(1, 0, 0, -1, origin.x * 2, origin.y * 2);\n    ctx.beginPath();\n    ctx.moveTo(\n      this.points[0].x * this.scale + origin.x,\n      -this.points[0].y * this.scale + origin.y\n    );\n    for (const point of this.points) {\n      ctx.lineTo(\n        point.x * this.scale + origin.x,\n        -point.y * this.scale + origin.y\n      );\n    }\n\n    ctx.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n    return;\n  }\n}\n","import { Vector2 } from \"utils/math/Vector2\";\n\nexport const Continent1: Array<Vector2> = [\n  new Vector2(0, 0.7),\n  new Vector2(-0.4, 1),\n  new Vector2(-0.8, 0.6),\n  new Vector2(-0.5, 0.1),\n  new Vector2(-0.15, 0),\n  new Vector2(-0.1, -0.6),\n  new Vector2(0.1, -0.8),\n  new Vector2(0.3, -0.5),\n  new Vector2(0.45, 0),\n  new Vector2(0.7, 0.3),\n  new Vector2(0.6, 0.6),\n  new Vector2(0.2, 0.76),\n];\n\nexport const Continent2: Array<Vector2> = [\n  new Vector2(0.3, 0.8),\n  new Vector2(-0.3, 0.7),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.1, 0),\n  new Vector2(-0.2, -0.2),\n  new Vector2(0.2, -0.6),\n  new Vector2(0.6, -0.1),\n  new Vector2(0.4, 0.15),\n  new Vector2(0.5, 0.4),\n];\n\nexport const Continent3: Array<Vector2> = [\n  new Vector2(-0.1, 0.5),\n  new Vector2(-0.7, 0.2),\n  new Vector2(-0.6, -0.3),\n  new Vector2(-0.2, -0.4),\n  new Vector2(0.3, -0.35),\n  new Vector2(0.6, -0.1),\n  new Vector2(0.65, 0.1),\n  new Vector2(0.4, 0.5),\n  new Vector2(0.2, 0.35),\n];\n\nexport const Continent4: Array<Vector2> = [\n  new Vector2(-0.3, 0.35),\n  new Vector2(-0.7, 0.1),\n  new Vector2(-0.4, -0.2),\n  new Vector2(0.1, 0.05),\n  new Vector2(0.45, -0.15),\n  new Vector2(0.75, 0.1),\n  new Vector2(0.4, 0.4),\n  new Vector2(0.1, 0.3),\n];\n\nexport const Continent5: Array<Vector2> = [\n  new Vector2(-0.5, 0.5),\n  new Vector2(-0.7, 0.3),\n  new Vector2(-0.3, 0),\n  new Vector2(-0.4, -0.4),\n  new Vector2(0, -0.8),\n  new Vector2(0.8, -0.5),\n  new Vector2(0.9, -0.3),\n  new Vector2(0.2, 0.4),\n];\n\nexport const Continent6: Array<Vector2> = [\n  new Vector2(0, 0.9),\n  new Vector2(-0.5, 0.7),\n  new Vector2(-0.2, 0.2),\n  new Vector2(-0.4, -0.4),\n  new Vector2(0.3, -0.2),\n  new Vector2(0.5, 0),\n  new Vector2(0.6, 0.7),\n];\n\nexport const Continent7: Array<Vector2> = [\n  new Vector2(0, 0.7),\n  new Vector2(-0.5, 0.6),\n  new Vector2(-0.3, 0.1),\n  new Vector2(0, 0),\n  new Vector2(0.1, -0.6),\n  new Vector2(0.45, 0),\n  new Vector2(0.7, 0.3),\n  new Vector2(0.6, 0.6),\n  new Vector2(0.2, 0.76),\n];\n\nexport const Continent8: Array<Vector2> = [\n  new Vector2(0, 0.8),\n  new Vector2(-0.25, 0.1),\n  new Vector2(-0.5, 0.1),\n  new Vector2(-0.4, -0.4),\n  new Vector2(-0.2, -0.6),\n  new Vector2(0.3, -0),\n  new Vector2(0.4, 0.15),\n  new Vector2(0.5, 0.4),\n];\n\nexport const Continent9: Array<Vector2> = [\n  new Vector2(-0.5, 0.35),\n  new Vector2(-0.4, 0.1),\n  new Vector2(-0.1, -0.2),\n  new Vector2(0.3, -0.5),\n  new Vector2(0.6, -0.15),\n  new Vector2(0.9, 0.1),\n  new Vector2(0.45, 0.4),\n  new Vector2(0.1, 0.3),\n];\n\nexport const Continent10: Array<Vector2> = [\n  new Vector2(-0.4, 0.5),\n  new Vector2(-0.5, 0.2),\n  new Vector2(-0.8, -0.5),\n  new Vector2(-0.5, -0.4),\n  new Vector2(0.1, -0.35),\n  new Vector2(0.4, -0.3),\n  new Vector2(0.65, 0.1),\n  new Vector2(0.4, 0.2),\n  new Vector2(0.2, 0.4),\n];\n\nexport const ContinentSamples = [\n  Continent1,\n  Continent2,\n  Continent3,\n  Continent4,\n  Continent5,\n  Continent6,\n  Continent7,\n  Continent8,\n  Continent9,\n  Continent10,\n];\n","import { Vector2 } from \"./math/Vector2\";\n\nexport const convertCartesianToScreenPoint = (\n  canvas: HTMLCanvasElement,\n  cartesianPoint: Vector2\n) => {\n  const screenPoint = cartesianPoint.add(\n    new Vector2(canvas.width / 2, canvas.height / 2)\n  );\n  return screenPoint;\n};\n","import { Vector2 } from \"./Vector2\";\n\nexport class Matrix2x2 {\n  Cols: Array<Vector2>;\n\n  constructor(\n    InCol0: Vector2 = Vector2.UnitX,\n    InCol1: Vector2 = Vector2.UnitY\n  ) {\n    this.Cols = [InCol0, InCol1];\n  }\n  transpose() {\n    return new Matrix2x2(\n      new Vector2(this.Cols[0].x, this.Cols[1].x),\n      new Vector2(this.Cols[0].y, this.Cols[1].y)\n    );\n  }\n\n  add(m: Matrix2x2) {\n    const col_1 = this.Cols[0].add(m.Cols[0]);\n    const col_2 = this.Cols[1].add(m.Cols[1]);\n    return new Matrix2x2(col_1, col_2);\n  }\n  subtract(m: Matrix2x2) {\n    const col_1 = this.Cols[0].subtract(m.Cols[0]);\n    const col_2 = this.Cols[1].subtract(m.Cols[1]);\n    return new Matrix2x2(col_1, col_2);\n  }\n  scalarBy(x: number) {\n    return new Matrix2x2(this.Cols[0].scalarBy(x), this.Cols[1].scalarBy(x));\n  }\n  negative() {\n    const col_1 = this.Cols[0].negative();\n    const col_2 = this.Cols[1].negative();\n    return new Matrix2x2(col_1, col_2);\n  }\n  determinant() {\n    return this.Cols[0].x * this.Cols[1].y - this.Cols[0].y - this.Cols[1].x;\n  }\n\n  multiplyMatrix(m: Matrix2x2) {\n    const transposedMatrix = this.transpose();\n    return new Matrix2x2(\n      new Vector2(\n        transposedMatrix.Cols[0].dot(m.Cols[0]),\n        transposedMatrix.Cols[1].dot(m.Cols[0])\n      ),\n      new Vector2(\n        transposedMatrix.Cols[0].dot(m.Cols[1]),\n        transposedMatrix.Cols[1].dot(m.Cols[1])\n      )\n    );\n  }\n\n  multiplyVector(v: Vector2) {\n    const transposedMatrix = this.transpose();\n    return new Vector2(\n      transposedMatrix.Cols[0].dot(v),\n      transposedMatrix.Cols[1].dot(v)\n    );\n  }\n}\n","import { Matrix2x2 } from \"./Matrix2x2\";\nimport { Vector3 } from \"./Vector3\";\n\nexport class Matrix3x3 {\n  Cols: Array<Vector3>;\n\n  constructor(\n    InCol0: Vector3 = Vector3.UnitX,\n    InCol1: Vector3 = Vector3.UnitY,\n    InCol2: Vector3 = Vector3.UnitZ\n  ) {\n    this.Cols = [InCol0, InCol1, InCol2];\n  }\n\n  transpose() {\n    return new Matrix3x3(\n      new Vector3(this.Cols[0].x, this.Cols[1].x, this.Cols[2].x),\n      new Vector3(this.Cols[0].y, this.Cols[1].y, this.Cols[2].y),\n      new Vector3(this.Cols[0].z, this.Cols[1].z, this.Cols[2].z)\n    );\n  }\n\n  add(m: Matrix3x3) {\n    const col_1 = this.Cols[0].add(m.Cols[0]);\n    const col_2 = this.Cols[1].add(m.Cols[1]);\n    const col_3 = this.Cols[2].add(m.Cols[2]);\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n  subtract(m: Matrix3x3) {\n    const col_1 = this.Cols[0].subtract(m.Cols[0]);\n    const col_2 = this.Cols[1].subtract(m.Cols[1]);\n    const col_3 = this.Cols[2].subtract(m.Cols[2]);\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n\n  scalarBy(x: number) {\n    return new Matrix3x3(\n      this.Cols[0].scalarBy(x),\n      this.Cols[1].scalarBy(x),\n      this.Cols[2].scalarBy(x)\n    );\n  }\n\n  negative() {\n    const col_1 = this.Cols[0].negative();\n    const col_2 = this.Cols[1].negative();\n    const col_3 = this.Cols[2].negative();\n    return new Matrix3x3(col_1, col_2, col_3);\n  }\n\n  determinant() {}\n\n  multiplyMatrix(m: Matrix3x3) {\n    const transposedMatrix = this.transpose();\n    return new Matrix3x3(\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[0]),\n        transposedMatrix.Cols[1].dot(m.Cols[0]),\n        transposedMatrix.Cols[2].dot(m.Cols[0])\n      ),\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[1]),\n        transposedMatrix.Cols[1].dot(m.Cols[1]),\n        transposedMatrix.Cols[2].dot(m.Cols[1])\n      ),\n      new Vector3(\n        transposedMatrix.Cols[0].dot(m.Cols[2]),\n        transposedMatrix.Cols[1].dot(m.Cols[2]),\n        transposedMatrix.Cols[2].dot(m.Cols[2])\n      )\n    );\n  }\n\n  multiplyVector(v: Vector3) {\n    const transposedMatrix = this.transpose();\n    return new Vector3(\n      transposedMatrix.Cols[0].dot(v),\n      transposedMatrix.Cols[1].dot(v),\n      transposedMatrix.Cols[2].dot(v)\n    );\n  }\n\n  toMatrix2x2() {\n    return new Matrix2x2(this.Cols[0].toVector2(), this.Cols[1].toVector2());\n  }\n}\n","import { Matrix2x2 } from \"./math/Matrix2x2\";\nimport { Matrix3x3 } from \"./math/Matrix3x3\";\nimport { Vector2 } from \"./math/Vector2\";\n\nexport class Rotator2D {\n  degree: number;\n  static getClampedValue(InDegree: number) {\n    let angle = InDegree % 360;\n    if (angle < 0) {\n      angle += 360;\n    }\n    return angle;\n  }\n  constructor(InDegree: number) {\n    this.degree = InDegree;\n  }\n  clamp() {\n    this.degree = Rotator2D.getClampedValue(this.degree);\n  }\n  toRadian() {\n    this.clamp();\n    return (this.degree * Math.PI) / 180;\n  }\n  update(newDegree: number) {\n    this.degree = Rotator2D.getClampedValue(newDegree);\n  }\n  getRotateMatrix() {\n    const cos = Math.cos(this.toRadian());\n    const sin = Math.sin(this.toRadian());\n    const rotateMatrix: Matrix2x2 = new Matrix2x2(\n      new Vector2(cos, sin),\n      new Vector2(-sin, cos)\n    );\n    return rotateMatrix;\n  }\n  getRotateAffineMatrix() {\n    const cos = Math.cos(this.toRadian());\n    const sin = Math.sin(this.toRadian());\n    const rotateMatrix: Matrix3x3 = new Matrix3x3(\n      new Vector2(cos, sin).toAffine(false),\n      new Vector2(-sin, cos).toAffine(false),\n      undefined //UnitZ\n    );\n    return rotateMatrix;\n  }\n}\n","import { convertCartesianToScreenPoint } from \"../../utils/cartesian\";\nimport { Vector2 } from \"../../utils/math/Vector2\";\nimport { Rotator2D } from \"../../utils/rotator2d\";\nimport { Continent } from \"./Continent\";\nimport { ContinentSamples } from \"./Continents/Examples\";\nimport { Spaceship } from \"./Spaceship\";\n\nexport class Planet {\n  canvas: HTMLCanvasElement;\n  rotator: Rotator2D;\n  radius: number;\n  position: Vector2;\n  speed: number;\n  distanceFromSun: number;\n  spaceShips: Array<Spaceship>;\n  continents: Array<Continent>;\n  continentOrigins: Array<Vector2>;\n  constructor(\n    canvas: HTMLCanvasElement,\n    distanceFromSun: number,\n    speed: number,\n    radius: number\n  ) {\n    this.canvas = canvas;\n    this.speed = speed;\n    this.rotator = new Rotator2D(Math.random() * 360);\n    this.distanceFromSun = distanceFromSun;\n    this.radius = radius;\n    this.spaceShips = [];\n    const positionAffineVector = new Vector2(distanceFromSun, 0).toAffine(true);\n    const rotateAffineMatrix = this.rotator.getRotateAffineMatrix();\n    const shuffledContinents = ContinentSamples.sort(() => 0.5 - Math.random());\n    const selectedContinents = shuffledContinents.slice(0, 5);\n    this.continents = selectedContinents.map((continent) => {\n      return new Continent(this.canvas, continent, 20);\n    });\n    this.position = rotateAffineMatrix\n      .multiplyVector(positionAffineVector)\n      .toVector2();\n    this.continentOrigins = [\n      new Vector2(0, -this.radius),\n      new Vector2(0, this.radius),\n    ];\n    const leftOriginCount =\n      this.continents.length - this.continentOrigins.length;\n    for (let i = 0; i < leftOriginCount; i++) {\n      const angle = (Math.PI * 2) / leftOriginCount;\n      const origin = new Vector2(\n        Math.cos(angle * i),\n        Math.sin(angle * i)\n      ).scalarBy(Math.random() * this.radius);\n      this.continentOrigins.push(origin);\n    }\n  }\n\n  drawContinents(origin: Vector2) {\n    for (const continentOrigin of this.continentOrigins) {\n      const continent = this.continents.shift()!;\n      continent.draw(origin.add(continentOrigin), {\n        r: 255,\n        g: 0,\n        b: 255,\n        a: 1,\n      });\n      this.continents.push(continent);\n    }\n    // const northPoleContinent = this.continents[0];\n    // const southPoleContinent = this.continents[1];\n    // northPoleContinent.draw(origin.subtract(new Vector2(0, this.radius)), {\n    //   r: 255,\n    //   g: 0,\n    //   b: 255,\n    //   a: 1,\n    // });\n    // southPoleContinent.draw(origin.add(new Vector2(0, this.radius)), {\n    //   r: 255,\n    //   g: 0,\n    //   b: 255,\n    //   a: 1,\n    // });\n    // for (let i = 2; i < this.continents.length; i++) {\n    //   const continent = this.continents[i];\n    //   continent.draw(origin, {\n    //     r: 255,\n    //     g: 0,\n    //     b: 255,\n    //     a: 1,\n    //   });\n    // }\n  }\n\n  draw() {\n    this.rotator.degree++;\n    const positionAffineVector = new Vector2(this.distanceFromSun, 0).toAffine(\n      true\n    );\n    const rotateAffineMatrix = this.rotator.getRotateAffineMatrix();\n    this.position = rotateAffineMatrix\n      .multiplyVector(positionAffineVector)\n      .toVector2();\n    const drawPosition = convertCartesianToScreenPoint(\n      this.canvas,\n      this.position\n    );\n    const ctx = this.canvas.getContext(\"2d\")!;\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(drawPosition.x, drawPosition.y, this.radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n    this.drawContinents(drawPosition);\n  }\n}\n","import { convertCartesianToScreenPoint } from \"../../utils/cartesian\";\nimport { Vector2 } from \"../../utils/math/Vector2\";\n\nexport class Sun {\n  canvas: HTMLCanvasElement;\n  radius = 150;\n  color = \"#FFFF4D\";\n  brightness: number = 0;\n  position: Vector2 = new Vector2(0, 0);\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n  }\n\n  setBrightness(brightness: number) {\n    console.log(brightness);\n    this.brightness = brightness;\n  }\n\n  clampBrightnessRadius(radius: number, clampMaxValue: number) {\n    const adjustedRadius = radius * 10000000;\n\n    if (adjustedRadius > clampMaxValue) {\n      return clampMaxValue;\n    }\n    if (adjustedRadius < 0) {\n      return 0;\n    }\n    return adjustedRadius;\n  }\n\n  drawBrightnessInner(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(\n      drawPosition.x,\n      drawPosition.y,\n      this.radius + this.clampBrightnessRadius(this.brightness, 10),\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawBrightnessOuter(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(\n      drawPosition.x,\n      drawPosition.y,\n      this.radius + this.clampBrightnessRadius(this.brightness, 20),\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawSun(drawPosition: Vector2, ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(drawPosition.x, drawPosition.y, this.radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.restore();\n  }\n  draw() {\n    const ctx = this.canvas.getContext(\"2d\")!;\n    const drawPosition = convertCartesianToScreenPoint(\n      this.canvas,\n      this.position\n    );\n    this.drawBrightnessInner(drawPosition, ctx);\n    this.drawBrightnessOuter(drawPosition, ctx);\n    this.drawSun(drawPosition, ctx);\n  }\n}\n","import { Vector2 } from \"utils/math/Vector2\";\nimport { Continent } from \"./Continent\";\nimport { ContinentA } from \"./Continents/ContinentA\";\nimport {\n  Continent1,\n  Continent10,\n  Continent2,\n  Continent3,\n  Continent4,\n  Continent5,\n  Continent6,\n  Continent7,\n  Continent8,\n  Continent9,\n} from \"./Continents/Examples\";\nimport { Planet } from \"./Planet\";\nimport { Sun } from \"./Sun\";\n\nexport class GalaxyCanvas {\n  private fps = 24;\n  element: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  width: number = 0;\n  height: number = 0;\n  sun: Sun;\n  planets: Array<Planet> = [];\n  requestAnimationFrameId: number;\n  continents: Continent[] = [];\n  constructor(element: HTMLCanvasElement) {\n    this.element = element;\n    this.ctx = element.getContext(\"2d\")!;\n\n    this.sun = new Sun(element);\n    this.initialize();\n    this.render();\n    this.requestAnimationFrameId = requestAnimationFrame(this.render);\n\n    this.continents.push(new Continent(element, Continent1, 100));\n    this.continents.push(new Continent(element, Continent2, 100));\n    this.continents.push(new Continent(element, Continent3, 100));\n    this.continents.push(new Continent(element, Continent4, 100));\n    this.continents.push(new Continent(element, Continent5, 100));\n    this.continents.push(new Continent(element, Continent6, 100));\n    this.continents.push(new Continent(element, Continent7, 100));\n    this.continents.push(new Continent(element, Continent8, 100));\n    this.continents.push(new Continent(element, Continent9, 100));\n    this.continents.push(new Continent(element, Continent10, 100));\n  }\n  updateFrame = () => {\n    // this.drawAll();\n    this.render();\n    setTimeout(() => {\n      this.requestAnimationFrameId = requestAnimationFrame(\n        this.updateFrame.bind(this)\n      );\n    }, 1000 / this.fps);\n  };\n\n  initialize() {\n    this.planets = [new Planet(this.element, this.sun.radius + 50, 1, 20)];\n  }\n\n  setWidth(width: number, devicePixelRatio?: number) {\n    this.width = width;\n    this.element.width = devicePixelRatio ? width * devicePixelRatio : width;\n    this.element.style.width = `${width}px`;\n  }\n\n  setHeight(height: number, devicePixelRatio?: number) {\n    this.height = height;\n    this.element.height = devicePixelRatio ? height * devicePixelRatio : height;\n    this.element.style.height = `${height}px`;\n  }\n\n  setSize(width: number, height: number, devicePixelRatio?: number) {\n    this.setWidth(width, devicePixelRatio);\n    this.setHeight(height, devicePixelRatio);\n  }\n\n  drawBackground() {\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n\n  render = () => {\n    this.clear();\n    this.drawScene();\n    setTimeout(() => {\n      requestAnimationFrame(this.render.bind(this));\n    }, 1000 / this.fps);\n  };\n\n  drawScene() {\n    this.drawBackground();\n    this.drawGalaxyComponents();\n  }\n\n  drawDummy() {}\n\n  drawGalaxyComponents() {\n    this.sun.draw();\n    for (const planet of this.planets) {\n      planet.draw();\n    }\n    for (let i = 0; i < this.continents.length; i++) {\n      this.continents[i].draw(new Vector2(150 * (i - 2), 150), {\n        r: 55,\n        g: 0,\n        b: 200,\n        a: 1,\n      });\n    }\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n}\n","import { CryptoContext } from \"context/CryptoContext\";\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { GalaxyCanvas } from \"./Canvas\";\n\ninterface Props {}\n\nconst Galaxy: React.FC<Props> = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n  const galaxyCanvasRef = useRef<GalaxyCanvas | null>(null);\n  const { cryptoData } = useContext(CryptoContext);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return () => {};\n    }\n    const galaxyCanvas = new GalaxyCanvas(canvasRef.current);\n    galaxyCanvasRef.current = galaxyCanvas;\n    return () => {\n      if (galaxyCanvasRef.current) {\n        galaxyCanvasRef.current.clear();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!cryptoData || !galaxyCanvasRef.current) {\n      return;\n    }\n    for (const crypto of cryptoData) {\n      console.log(crypto, \"hihihi\");\n      if (crypto[0] === \"KRW-BTC\") {\n        //krw-btc is sun\n        galaxyCanvasRef.current.sun.setBrightness(crypto[1].increaseRatio);\n      }\n    }\n  }, [cryptoData]);\n\n  useEffect(() => {\n    const onResize = () => {\n      if (!divRef.current || !galaxyCanvasRef.current) {\n        return;\n      }\n      const rect = divRef.current.getBoundingClientRect();\n\n      galaxyCanvasRef.current.setSize(rect.width, rect.height);\n      galaxyCanvasRef.current.drawScene();\n    };\n\n    onResize();\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"fixed\",\n      }}\n      ref={divRef}\n    >\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default Galaxy;\n","import React, { useRef } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Galaxy from \"./components/Galaxy\";\nimport { CryptoContextProvider } from \"./context/CryptoContext\";\n\nfunction App() {\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}\n    >\n      {/* <header>\n        <h1>Crypto Galaxy</h1>\n      </header> */}\n      <CryptoContextProvider>\n        <Galaxy />\n      </CryptoContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}